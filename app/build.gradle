buildscript {
  repositories {
    jcenter()
        maven { url 'https://maven.fabric.io/public' }
  }
  dependencies {

    //useful for accessing the code generated by Dagger
    classpath "com.neenbedankt.gradle.plugins:android-apt:$rootProject.androidapt"
    //latest version from here https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
    classpath "io.fabric.tools:gradle:$rootProject.fabricGradlePlugin"
  }
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'io.fabric'

repositories {
  jcenter()
  maven { url 'https://maven.fabric.io/public' }
}


def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
  signingConfigs {
    debug {
      storeFile file("debug.keystore")
    }
    release {
      try {
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
        storeFile file(keystoreProperties['storeFile'])
        storePassword keystoreProperties['storePassword']
      }
      catch (ex) {
        throw new InvalidUserDataException("You should define required fields in keystore.properties.")
      }
    }
  }
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    applicationId "com.androidistan.urdufontcomparator"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode rootProject.ext.versionCode
    versionName rootProject.ext.versionName
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    debug {
      minifyEnabled false
      debuggable true
      ext.enableCrashlytics = false
      signingConfig signingConfigs.debug
      applicationIdSuffix ".debug"

      //This is to disable submitting ratings for debug builds to avoid polluting database
      buildConfigField "boolean", "SHOW_RATING_DIALOG", "false"
    }
    release {
      minifyEnabled true
      debuggable false
      ext.enableCrashlytics = true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
      buildConfigField "boolean", "SHOW_RATING_DIALOG", "true"
    }
  }
}

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  // App's support dependencies
  compile "com.android.support:appcompat-v7:$rootProject.supportLib"
  compile "com.android.support:support-v4:$rootProject.supportLib"
  // Dependencies for Android UI Tests
  androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espresso", {
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude module: 'jsr305'
  })
  androidTestCompile "com.google.dagger:dagger:$rootProject.dagger"
  // Dependencies for local unit tests
  testCompile "junit:junit:$rootProject.junit"
  // Dependencies for Android unit tests
  androidTestCompile "junit:junit:$rootProject.junit"
  //UI
  compile "com.jakewharton:butterknife:$rootProject.butterknife"
  apt "com.jakewharton:butterknife-compiler:$rootProject.butterknife"
  //Dependency Injection
  compile "com.google.dagger:dagger:$rootProject.dagger"
  apt "com.google.dagger:dagger-compiler:$rootProject.dagger"
  //Dialogs
  compile "com.github.stfalcon:universalpickerdialog:$rootProject.universalpickerdialog"
  //Lovely dialogue
  compile "com.yarolegovich:lovely-dialog:$rootProject.lovelydialog"
  //SmileyRating
  compile "com.github.sujithkanna:smileyrating:$rootProject.smileyrating"
  //Circle Indicator
  compile "me.relex:circleindicator:$rootProject.circleindicator@aar"
  //Serialization/Deserialization
  compile "com.google.code.gson:gson:$rootProject.gson"
  //Firebase
  compile "com.google.firebase:firebase-database:$rootProject.firebase"
  compile "com.google.firebase:firebase-core:$rootProject.firebase"
  //Logging
  compile "com.jakewharton.timber:timber:$rootProject.timber"
  // Crashlytics Kit
  releaseCompile("com.crashlytics.sdk.android:crashlytics:$rootProject.crashlytics@aar") {
    transitive = true
  }

}

//THIS PLUGIN HAS TO BE AT THE BOTTOM
//https://firebase.google.com/docs/android/setup
apply plugin: 'com.google.gms.google-services'